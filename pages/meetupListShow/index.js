import React from "react";
import MeetupList from "../../components/meetups/MeetupList";
import { MongoClient } from "mongodb";
import { Fragment } from "react";
import Head from "next/head";

function index(props) {
  return (
    <Fragment>
      <Head>
        <title>{props.meetups.title}</title>
        <meta name="description" content={props.meetups.title} />
      </Head>
      <MeetupList meetups={props.meetups} />;
    </Fragment>
  );

  //   <MeetupList meetups={props.meetups} />;
}

export async function getStaticProps() {
  //fetch data from api

  const client = await MongoClient.connect(
    "mongodb+srv://GiteshPareek:eGMSALMvO28HvudS@cluster0.tkdoyug.mongodb.net/meetups?retryWrites=true&w=majority"
  );

  const db = client.db(); // to get hold of the data to which we are connecting
  // if that data is not created yet it will be created on fly

  const meetupsCollection = db.collection("meetups");
  // Mongodb works with collections full of documents
  // collections like tables in sql db
  // documents would be the entries in those tables

  const meetups = await meetupsCollection.find().toArray();
  // so that we can get back an array of documents

  client.close();
  //to close the connection when we done patching data from mongodb before we return

  return {
    props: {
      //  meetups: meetups , By this we get error, bcs autogenerated id is not a string its a strange object it type thing

      meetups: meetups.map((meetup) => ({
        title: meetup.title,
        address: meetup.address,
        image: meetup.image,
        id: meetup._id.toString(),
      })),
    },
    revalidate: 1,

    // revalidate: 10 , by this, this page would be regenerated on the server at least every 10 sec if request is coming in
  };
}

export default index;
